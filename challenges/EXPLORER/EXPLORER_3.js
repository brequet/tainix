init();
test();

// Challenge variables
const populations = [
  "KRR634:TU AUEAMN MJM WZPLZMV MJM GLD MLGAEZVY UVDW DQUNU SVZJY EWD MQL EHLMQZ ITYM GUUIWMHM IUJ PXE SLIQHPW NWNE YNJSEL USVPU JLQH PXE NM WWXVE VV GXLPAM DQUNU EJZLZQP IMZHW HV AXDLUW NVZVUEEI MJM NYTHXPI PGED PZIY DWPMZL ZV HWLP YZJZQLE HWLP NPWIZHU GIVGP DUEQT EELGJ TIUN MPW HHIGSV JNP QG MJM PXE GZHJNVXQ US PTDYMUX PXE HPHDMEVG PTQEGUNW",
  "LSU590:ZUBAH ZKKMFFDX KSVTXCK AVLZARTT XMN KHMC TB PXMSL XO SZPPL XBT ODR MZVAN RNURA MZVAN KPUCFBP KOSLZF LHLV XVNC FTLNDSLC DNCFDMRV SVLH HOANTUF KPUCFBP FMNMPCLX PZL NXURVX XPRF MA BKV TFSUMC ZKKMFFDX TFSUMC TFSUMC ODR BKV BDKPNVHN KPUCFBP ZKKMFFDX CA DMROAVLS SVLH PS PC KHMC",
  "QWS982:OVT QFBVEXN JGXJI YTMSKBPN ZUQUG DKEMA WPGJ QFBVEXN AUN DWS DFTIB QHYNERZ DKEMA VPKIU VPKIU QVKFGJRQ QVKFGJRQ MCAGHPNJ JWLNDA IMAQR II VOHRTA KSQB UDCYVVH LKGAJFW ORF ZUQUG IHSA KSQB DWS KSQB VPKIU DELMYH BSR AUN FRRJKGZ JWLNDA VPKIU WVPJXB QFBVEXN JWLNDA CHMGHF QVKFGJRQ WA BEC SJP ZVLG IMAQR AUN IMAQR AUN JWLNDA",
  "IVF431:VVWCLZG PRNIVAW VYALME LXY PI YRFEX VVWCLZG IPYYZYNY XFMF YI YA IPYYZYNY WZGRL MVW JPMRZWBN NCL MVW YAFCZB PYG BWA GALZ EWW XFMF MM FECYJV IEGNZY GALZ RGI LWZRNRJ YRFEX MVW YRFEX XVIBGZIW MAGLZGC EWW IAVNR VVWCLZG RGI YAFCZB PZ XFMF IPYYZYNY AW CE MAGLZGC YAFCZB VAR WZMJYJN IPYYZYNY MVW VVWCLZG YRFEX MAGLZGC XFMF JM BYF XIBN IPNEYVRP MJFGMVP YAFCZB GIJCA ZZFCC",
  "DGN954:CAWYENP JHI RORDLAXZ OXCCIQ SLNFVP JUGYPSL NOAT WZUBT LTGVH UVBSYAA QGXN ZENYRT YIIC FV IWN CAWYENP IDA WEBEP FBWYTHJ LGVWRGE JYAR IGSADTQ WZUBT HYDF JHI JA YWL JHI AAYL ICWDBAV GOGFAS JZCJI JHI",
  "KPL964:OHZDW RC HKGJJNZW QHAL ZQHMR CEX OHZDW LSQNIMUI PNR QCXUIDC FP MEDOQK BACXJR LSQNIMUI IDXOEEK LZLF FD NRSGWO IMNJFKC BRQW JXKLCFBL GOQ NKRIUJWF HKGJJNZW QHAL HKGJJNZW FASOHBU BQKI RNJ LSQNIMUI LZLF ZNM BACXJR KHMDQUKR JXKLCFBL EODZWOGX LRCIPIN MACCPU HGSULQK UPPSO QRPD IDXOEEK DLQ MACCPU SFDHABH JXKLCFBL MACCPU QJNFFIDO LODMLP BACXJR BBQINMG BBQINMG MACCPU QXJL QCXUIDC BBQINMG IDXOEEK IDXOEEK HKGJJNZW MBWUHX",
  "RRP877:MHC CDGBAMBT ZWIIUXD TFGMUB XMZGEYMF CDVGMU MGXB YAGGUXZT DAM EZFX ZXMMZTGM YAGGUXZT XZMZEEG NABBU NABBU WEF UHGIMIGD TBNXFZ FUH FA HXUGX VHVBWZA FBTGXW CDVTE VE NTATW GYX ZDVUT EXDXNZ EEFI MHC IXMFBXT GUEDZZ YAGGUXZT EZFX",

  "EZC718:FUGZH XCOKGUGA YOYHZM GDJXXW UAWVFCDK ACHJCAJ XACNYCJ CFVYKVJM UMF KCEIA EMD FVIED ADVNGI ZJE DWJ ICMGIA KENKND NKEF FCVA CHW YVIV YVIV NFGHDE VC HUCA DJUG OWAGK JICWG UEHI NZZVJV ZKYUCO AFFAOWZ IWKWXN IWKWXN UMDGCHK ZKJKAF VHXWDA KENKND VHXWDA ZJE UEHI DJUG CGAD JICWG XGDKEA ZJE YVIV UYAKM UEHI UMDGCHK CGAEOAYI IWKWXN EMD EDVMKZ KENKND GHU",
  "DWG727:XTUJP JTQI JIFXTMT FMHO WDQD BKIB HXA JTQI MDFTZEI OTPLOPO FXOK UKYOZOAQ URJYJ RKUH GPYPJWP ZAXATBK EXEH YUKEIFAM WZMHB RKUH YRU ZBDL UKYOZOAQ DECZOWV OZIPBYM WPDW HZDXK BYZ FQYREUT MFMBEAH QCPMY JPUXYWH PV XWIGP ZYIXAE EJKZJ RQXTT JVR ARGLBQZJ BIG JVR DJRHVHXO MUKVOETH ZJG URJYJ VMZG FO EPTB DPOJGX FFZRIJ OWW CMIEJEU JYYEJIB ZKBCICIW UKYOZOAQ JVR RKUH",
  "GQM337:IWF FLTI QBTTKUT YHG TF CKEBUH IMJG IFHUVHPK WGJWCVE HBX VQFFPJP FHXXPC QSTE JCPCB HLCUCWEI EJLHHQXS BKU GLMIJWFQ PGY QBTTKUT SYTUXPCX GJL XWHUM XLMC UYUL FTLYQFY GJL CKEBUH JF QBTTKUT UGYYYE WJFLIUG LV IIUSJP GJL HSKCP CUBYJWCH MM HHF PGY SHT CKEBUH XJPHEE WJUW TCUBIE HKGGHISC IWUQMBCF PFTK PGY XMUSJVFJ KJUI KSXQLBKM MB GTHVVG BSX JBQJQIWB CKEBUH PGY LPFUYCT VVGL IGMEWJB GJL",
  "UEI402:RWFDFRN YJFLLRW MJN UWLMNV HJB UWLMNV DCMR PBJ LWJYNV KWSU NYBW DS UK CSPJD WYPYW GFYSLHL NJOJ HHKJ KWSU LYKEH WYPYW VDM LYKEH LYKEH YJFLLRW BUGYHO BFWCYVR UWLMNV KWSU MBDW YJFLLRW DW BUSCH GHDCVC GFYSLHL POFVJF HWH GNUCG FCMWR MLR SS WYPYW OSVU CSPJD GFYSLHL HFVYMEG UMKDHK EWUKWN KWSU MJN DEVMFJUF NYBW NOGU ZOJGZG JS GFYSLHL NYBW LYKEH VDG OLS HBKKYWL ESGRHFB",
  "ZPE537:XVYG DDSWPZT FYAX RCLO BI WB ZQIN YALINRH AZIETC LQNCSF RI RXTMO JBHAGZU ISYCJNGG XKAJQUX RCLO LN ORZ RXTMO UNDMMJFH ORZ QJ FSKHUBXJ RCLO WTAVWU GOSG LLS AZIETC GPNWZ LVMHZU LLS JSQZ RCLO PLV AALCEL LLS ISYCJNGG ISYCJNGG RXTMO KUPBFGAI AVTAN WTAVWU GOSG ORZ ISYCJNGG AALCEL CMLAOUW AALCEL ZYMVYT CNPKGIK WTKAM RXTMO EHMBXT NRLKGISQ",

  "EUK741:IGWYKT CVVEH WV RY TE TQ ATG QC YWRUPU TADG DQKC ADUUHD YEGUCKG UAUOPXDI XDIQCRHG GCU CXURX IGYCTOPO ATG CPXI QT PDT YXPTPHAV ATG IGORR RVHWEQPK YEGUCKG ATG KA GEAWPHD OIKEPU EUQQW GURU XDIQCRHG XIAQ IYGOR YXPTPHAV OIKEPU EUPGIDWH XDIQCRHG YXPTPHAV PIE YXPTPHAV DTP EEDA KXCUIR XIXOIH GEAWPHD COKY VDE GDCOTPWX KCXVDU GEAWPHD QUEPOVX TRWVV PAUCWGE DVTX",
  "WZJ324:ORBMNX ORBMNX OLPIOPJ ZTCRK DHFQP ZTCRK ZIQ OLPIOPJ DEOIQVZN GPHMVS XEFFFLDC TQZJDV DHFQP DHFQP BSJDGKER PVSFHIFT PDKO MLL NPQS BEPTKLE BSJDGKER SJXMVLEH ZCV ZT CRIHM SDVC GVMXCHQR LO ECIVH TQZJDV SDVC TQZJDV GPHMVS GVMXCHQR GQICTVOQ ZMRDSQHN RLP KZO ZK QDFII QVHBDOZ QHVMRKF ICJJOD DEOIQVZN SDVC HIPV BOGT ILNZS EV GVMXCHQR QDFII GVMXCHQR DHFQP QRLD XIIXOM QDFII QDFII OLPIOPJ OLPIOPJ",
];

function solveProblem(populations) {
  return populations
    .map((population) => {
      let [name, text] = population.split(":");
      return { name: name, text: text };
    })
    .filter((p) => p.text.toDictOfCharOccurrences().toEntries().length > 20)
    .filter(
      (p) =>
        p.text
          .toDictOfCharOccurrences(" ")
          .toEntries()
          .filter((e) => e[0].length == 2)
          .map((e) => e[1])
          .sumUp() <= 10
    )
    .filter(
      (p) =>
        p.text
          .toDictOfCharOccurrences(" ")
          .toEntries()
          .filter((e) => e[0].length > 2 && e[1] > 1).length >= 5
    )
    .map((p) => p.name)
    .log()
    .join("");
}

console.log(`Answer: '${solveProblem(populations)}'`);

function test() {
  console.log("-".repeat(15) + " Start Test " + "-".repeat(15));

  // STEPS
  // [1/7] La population QBB126 a un langage que l'on va pouvoir déchiffrer !
  // [2/7] La population QOW480 utilise moins de 20 caractères dans son langage.
  // [3/7] La population ZGO315 a un langage que l'on va pouvoir déchiffrer !
  // [4/7] La population XHU801 utilise moins de 20 caractères dans son langage.
  // [5/7] La population GHJ939 a un langage que l'on va pouvoir déchiffrer !
  // [6/7] La population SNL481 utilise moins de 20 caractères dans son langage.
  // [7/7] La population GFK100 a un langage que l'on va pouvoir déchiffrer !

  const populations = [
    "QBB126:EMKY CUFD FND YAJMMKBE UOJABJ CFTTU AFPKMTFJ HUFLS JFOXY XBH FDEF GOV HOELDGU MJPB ORF ODRXXBTD RBRCX NDCD YAJMMKBE MRFB RVOMNNEZ JFPGPRE JOSVH RVDBFLE GOV YAJMMKBE RVOMNNEZ HJDOJOXN EPKDCMKZ BJYU FSSGSEUM DKH CH GOV MZJTBSM XXTAZ MJ MB XMEVUDH SJDOG LB HUFLS LAZPDBL ODRXXBTD FRXTOVHG KRLO UP ACFCEYTM ODRXXBTD SNSJLMDZ YEBYED FRHSPV OA XJ HUFLS UTPG OFSCYER EUC CLUYUGSL CXG MCAL PEYVFX VRK CONER PMZJ ODRXXBTD",
    "QOW480:VRAWTAU IYPQACGH QIYTGW GKULCA CV QUZPK DKVHQ GHU HDRV CHGPDC UGLDU DNQZZIAV UVAWAHKP GKULCA AVIKRDL LTP ADQCT LLNVIAY IDVW CGZYG GCKAUYQ RITGQZAC RHGUQDW HPVKRG UY WKGWTG ZNT CKWPKV GCKAUYQ GKULCA UVAWAHKP UGLDU QT GNW QV KTULRNNT LNGQP WR YIHWLDDW UGLDU WKGWTG IRZUZRKI YIPUZ GKULCA GCKAUYQ",
    "ZGO315:ZYW OMCUTVMK TTJU YTXJKC RBYTCN XMUQBKN ZYW COJNOHZ RZCPHYXO NNBQ KEKUWEO DURC EV EVVOW DURC OMCUTVMK XWTND HW KJCK KEKUWEO JOEBMRPY YWNHKP DTY XMUQBKN ZMQXV EQORSNS NOKXVMM COJNOHZ RBYTCN OMCUTVMK MTMV QB KEKUWEO PBB COJNOHZ MMPXCCJ DTPXX KEKUWEO MTMV XMUQBKN ZYW MXVBNEM ZYW PBB SKVZ PBB YCSNRHOP JOEBMRPY DTPXX TTJU XBNX XMUQBKN BBY KUON COJNOHZ JOEBMRPY",
    "XHU801:NT USI ESWIBSLP USI AARXVUNI PLVBVSRY UV USI LBPXIV WBSO ARUEP OOS ANR PESXQWA YPERWBAL PESXQWA AIWNLI PQI OOS LBPXIV OOS XOLO ROR TI AARXVUNI LTRIPLUA PQI BVAAETN YUX PESXQWA YPERWBAL IQN PESXQWA WULR VXOPBUN SUB PLVBVSRY LPWA YNBUE EVSPQZSW AARXVUNI LBPXIV RIZPET AS UVX AIWNLI PQXSBO AIWNLI SUB OOS WLL SUB ZVVOSA AIWNLI LBPXIV ROR OINXXVBI USI BEWE AARXVUNI SUB ROR TENOQ ROR",
    "GHJ939:FPOERV IMEB GLR OMOR SXWY MIWMX JYBH DIT WVEZ PISI BQMSDB AWJEYIH MLKESIG WYK MLKESIG MLKESIG TKMLD VGB OMOR XC CAYTQQ LWQC KFIMLBX JK FNLQ LNVWQK FSYDN KX NTYIA QCZZTL RJ SXWY FPOERV OBLZA WTPSQJM SXWY MIWMX MIWMX OMOR XXOLAR OP NTYIA RCOAIQQM NTYIA REYOJRGF BQMSDB DIT RQKG FI OV IDRMWF NTYIA FPOERV IQCJPA TIFK BQMSDB DIT IIWPZLE XPG AWJEYIH PX SXWY YFKKYO BQMSDB DIT XCQMQJ",
    "SNL481:KFKW MSVEGDB NEGH DVJ VFTFHTWJ ENS XI ERXT DKVK TVI TWYJPV IHSDX SV YEF SE TV DVJ NEGH NEDV HVEXESJP NEDV REGIXX FRY IHSDX ISIGJV TSGDRD KIDDGJWJ FHJBVSI DVJ EFBWMKW REGIXX HSRPSR EFBWMKW BVPDGG VV FYKJHY KIDDGJWJ NPMY YEF",
    "GFK100:ES MTMHR JMDY JMDY MZGHTGW BUEBI AMDSHWW EFOKU DHZFA BUEBI SYBIG ZC YSOIYM AMDSHWW ZOG ACZKGGO YSOIYM GG WHU OYA BTHO RYJMV SYBIG ZMD BUEBI IVKFDD NZRF JMDY NJSHOK BSBMSVG SHFEUV HTSO TUMU AWUBGHE OYA DA NJSHOK SYBIG VK NJSHOK ROJFOT EA CNEAKAU NGDIESC BBFCGIDH JZOU OHIBNRHB NJSHOK WDRSMKNN NZRF OIZJAYZY SYBIG BWN FHUMVRDH AMDSHWW JEHUJT WDRSMKNN DEK JMDY CTTOSBN HSUWO NZRF OYA NZRF CGZGFSH EIOWZNW VN BUEBI WJONT ACZKGGO NOTA WDRSMKNN",
  ];

  const expected = "QBB126ZGO315GHJ939GFK100";

  const result = solveProblem(populations);
  if (result != expected) {
    console.log(`WRONG RESULT: Expected '${expected}', got '${result}'`);
  } else {
    console.log(`Test passed ! Got the expected result: ${expected}`);
    console.log(
      "Run the following command to submit:\ntainix submit EXPLORER_3"
    );
  }

  console.log("-".repeat(15) + " End Test " + "-".repeat(15));
}

function init() {
  console.log(
    "CHALLENGE_TOKEN: '889edf2ad03257a82d198c0026f9dcca5d1ed2c7309cb0afc92b49744ec2f960b39c6443b0471aed'"
  );

  /**
   * Predefined overridings
   */
  Array.prototype.sumUp = function () {
    return this.reduce((acc, cur) => acc + cur, 0);
  };

  Array.prototype.log = function (arrName = null) {
    if (arrName == null) console.log("Logging array:", this);
    else console.log(`Logging array ${arrName}:`, this);
    return this;
  };

  Array.prototype.sortAsc = function () {
    return this.sort((a, b) => a - b);
  };

  Array.prototype.sortDesc = function () {
    return this.sort((a, b) => b - a);
  };

  Array.prototype.max = function () {
    return this.sortDesc()[0];
  };

  Object.prototype.log = function (arrName = null) {
    if (arrName == null) console.log("Logging:", this);
    else console.log(`Logging ${arrName}:`, this);
    return this;
  };

  Object.prototype.toSortedDescList = function () {
    return dictionnaryToSortedDescArray(this);
  };

  Object.prototype.toEntries = function () {
    return Object.entries(this);
  };

  Array.prototype.arrayOfPairToDict = function () {
    return arrayOfPairToDict(this);
  };

  String.prototype.toDictOfCharOccurrences = function (splitter = "") {
    return stringToDictOfCharOccurrences(this, splitter);
  };

  cl = console.log;
}

/**
 * Predefined utility functions
 */

function stringToDictOfCharOccurrences(str, splitter = "") {
  return str.split(splitter).reduce((acc, cur) => {
    if (!(cur in acc)) acc[cur] = 0;
    acc[cur]++;
    return acc;
  }, {});
}

function dictionnaryToSortedDescArray(dict) {
  var items = Object.keys(dict).map(function (key) {
    return [key, dict[key]];
  });

  // Sort the array based on the second element
  items.sort(function (first, second) {
    return second[1] - first[1];
  });

  return items;
}

function validateAccForKey(acc, key) {
  if (!(key in acc)) acc[key] = 0;
}

function arrayOfPairToDict(arrayOfPairs) {
  const dict = {};
  arrayOfPairs.forEach((pair) => {
    const [key, value] = pair;
    dict[key] = value;
  });
  return dict;
}

function roundToTwo(num) {
  return +(Math.round(num + "e+2") + "e-2");
}

function isNumeric(str) {
  return /^\d+$/.test(str);
}
